{"version":3,"sources":["components/SelectFilter.jsx","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","slider","marginTop","width","color","green","GreenRadio","withStyles","checked","props","Radio","GreenButton","marginBottom","Button","cameraList","rover","name","fullName","SelectFilter","filter","setFilter","setPage","setPhotos","classes","handleChange","event","target","value","Container","className","FormControl","component","FormLabel","RadioGroup","onChange","row","FormControlLabel","control","label","camera","map","item","earth","TextField","id","type","earth_date","textField","InputLabelProps","shrink","onClick","sol","page","Slider","min","max","getAriaValueText","step","marks","valueLabelDisplay","onChangeCommitted","newValue","textAlign","App","styles","useState","photos","fetching","setFetching","useEffect","apiUrl","process","axios","get","params","api_key","then","resp","data","length","console","log","catch","error","src","img_src","alt","height","p","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b8bcc00.chunk.js","sourcesContent":["import React from 'react'\nimport { Container, makeStyles, TextField, withStyles, Slider, Button } from '@material-ui/core'\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { lightGreen as green } from '@material-ui/core/colors';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  slider: {\n    marginTop: 30,\n    width: 640,\n    color: green[300],\n  },\n}))\n\nconst GreenRadio = withStyles({\n  root: {\n    color: green[300],\n    '&$checked': {\n      color: green[500],\n    },\n  },\n  checked: {},\n})((props) => <Radio color=\"default\" {...props} />);\n\nexport const GreenButton = withStyles({\n  root: {\n    color: green[500],\n    marginBottom: 60,\n  }\n})((props) => <Button color=\"default\" {...props} />);\n\nconst cameraList = rover => {\n  switch (rover) {\n    case 'curiosity':\n      return [{ name: 'FHAZ', fullName: 'Front Hazard Avoidance Camera' }, { name: 'RHAZ', fullName: 'Rear Hazard Avoidance Camera' },\n      { name: 'NAVCAM', fullName: 'Navigation Camera' }, { name: 'MAST', fullName: 'Mast Camera' },\n      { name: 'CHEMCAM', fullName: 'Chemistry and Camera Complex' }, { name: 'MAHLI', fullName: 'Mars Hand Lens Imager' },\n      { name: 'MARDI', fullName: 'Mars Descent Imager' }];\n    case 'opportunity':\n      return [{ name: 'FHAZ', fullName: 'Front Hazard Avoidance Camera' }, { name: 'RHAZ', fullName: 'Rear Hazard Avoidance Camera' },\n      { name: 'NAVCAM', fullName: 'Navigation Camera' }, { name: 'PANCAM', fullName: 'Panoramic Camera' },\n      { name: 'MINITES', fullName: 'Miniature Thermal Emission Spectrometer (Mini-TES)' }];\n    case 'spirit':\n      return [{ name: 'FHAZ', fullName: 'Front Hazard Avoidance Camera' }, { name: 'RHAZ', fullName: 'Rear Hazard Avoidance Camera' },\n      { name: 'NAVCAM', fullName: 'Navigation Camera' }, { name: 'PANCAM', fullName: 'Panoramic Camera' },\n      { name: 'MINITES', fullName: 'Miniature Thermal Emission Spectrometer (Mini-TES)' }];\n    default:\n      return [];\n  }\n}\n\nexport default function SelectFilter({ filter, setFilter, setPage, setPhotos }) {\n\n  const classes = useStyles();\n  const marks = [\n    {\n      value: 0,\n      label: '0',\n    },\n    {\n      value: 250,\n      label: '250',\n    },\n    {\n      value: 500,\n      label: '500',\n    },\n    {\n      value: 750,\n      label: '750',\n    },\n    {\n      value: 1000,\n      label: '1000',\n    },\n  ];\n\n  const valuetext = value => `${value}`\n\n  const handleChange = event => {\n    const name = event.target.name;\n    setFilter({\n      ...filter, ...{\n        [\n          name]: event.target.value,\n        page: 1,\n      }\n    });\n    setPage(1)\n    setPhotos([])\n  }\n\n  return (\n    <>\n      <Container className={classes.root}>\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">Rover</FormLabel>\n          <RadioGroup aria-label=\"Rover\" name=\"rover\" value={filter.rover} onChange={handleChange} row>\n            <FormControlLabel value='curiosity' control={<GreenRadio />} label=\"Curiosity\" />\n            <FormControlLabel value='opportunity' control={<GreenRadio />} label=\"Opportunity\" />\n            <FormControlLabel value='spirit' control={<GreenRadio />} label=\"Spirit\" />\n          </RadioGroup>\n        </FormControl>\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">Camera</FormLabel>\n          <RadioGroup aria-label=\"Camera\" name='camera' value={filter.camera} onChange={handleChange} row>\n            {cameraList(filter.rover).map(item => <FormControlLabel key={item.name} value={item.name} control={<GreenRadio />} label={item.fullName} />)}\n          </RadioGroup>\n        </FormControl>\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">Day</FormLabel>\n          <RadioGroup aria-label=\"Date\" name=\"earth\" value={filter.earth} onChange={handleChange} row>\n            <FormControlLabel value=\"true\" control={<GreenRadio />} label=\"Earth date\" />\n            <FormControlLabel value=\"\" control={<GreenRadio />} label=\"Martian sol\" />\n          </RadioGroup>\n        </FormControl>\n        <FormControl component=\"fieldset\">\n          {filter.earth ?\n            <TextField\n              id=\"date\"\n              label=\"Earth date\"\n              name=\"earth_date\"\n              type=\"date\"\n              value={filter.earth_date}\n              onChange={handleChange}\n              className={classes.textField}\n              InputLabelProps={{\n                shrink: true,\n              }} /> :\n            <div>\n              <GreenButton\n                onClick={() => {\n                  setFilter({\n                    ...filter, ...{\n                      sol: --filter.sol,\n                      page: 1,\n                    }\n                  });\n                  setPage(1)\n                  setPhotos([])\n                }}>-</GreenButton>\n              <Slider className={classes.slider}\n                min={0}\n                max={1000}\n                value={filter.sol}\n                name=\"sol\"\n                getAriaValueText={valuetext}\n                step={1}\n                marks={marks}\n                valueLabelDisplay=\"on\"\n                onChangeCommitted={(event, newValue) => {\n                  setFilter({\n                    ...filter, ...{\n                      sol: newValue,\n                      page: 1,\n                    }\n                  });\n                  setPage(1)\n                  setPhotos([])\n                }}\n              />\n               <GreenButton\n                onClick={() => {\n                  setFilter({\n                    ...filter, ...{\n                      sol: ++filter.sol,\n                      page: 1,\n                    }\n                  });\n                  setPage(1)\n                  setPhotos([])\n                }}\n              >+</GreenButton>\n            </div>\n          }\n        </FormControl>\n      </Container>\n    </>\n  )\n}\n","import { useState, useEffect } from 'react';\nimport axios from \"axios\"\nimport  {Container, makeStyles }  from '@material-ui/core'\nimport SelectFilter, { GreenButton } from './components/SelectFilter';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(3, 0, 2),\n    textAlign: 'center',\n  },\n}))\n\nfunction App() {\n  const styles =useStyles()\n  const ItemsPerPage =25\n  const [filter, setFilter] = useState({\n    rover: 'spirit',\n    camera: 'NAVCAM',\n    earth: 'true',\n    earth_date: '2004-01-05',\n    sol: 1,\n    })\n  const [page, setPage] = useState( 1 )\n  const [photos, setPhotos] = useState([])\n  const [fetching, setFetching] = useState( false )\n  \n  // https://api.nasa.gov/mars-photos/api/v1/manifests/Curiosity/?earth_date=2015-6-3&api_key=DEMO_KEY\n  useEffect(() => {\n    const apiUrl = process.env.REACT_APP_NASA_ENDPOINT + 'mars-photos/api/v1/rovers/' + filter.rover + '/photos'  \n    setFetching(true)\n    axios.get(apiUrl, {\n                        params: {...{\n                          camera: filter.camera,\n                          page: page,\n                          api_key: process.env.REACT_APP_NASA_API_KEY},...filter.earth?({earth_date: filter.earth_date}): ({sol: filter.sol})\n                        }}\n  ).then((resp) => {\n        if(resp.data.photos.length) {\n        setPhotos(photos => [...photos,...resp.data.photos]);\n         if(resp.data.photos.length < ItemsPerPage) {\n          setFetching(false)\n         }\n        } else {\n           setFetching(false)\n          }\n      console.log(resp.data.photos.length)\n    })\n    .catch(function (error) {\n      console.log(error);\n    })\n  }, [filter, page]);\n\n  return (\n      <div className={styles.root}>\n         <Container>\n        <SelectFilter filter={filter} setFilter={setFilter} setPage={setPage} setPhotos={setPhotos}/>\n \n        {photos && photos.map(item => <img key={item.id} src={item.img_src} alt={\"\"} width=\"800\" height=\"auto\" />)}\n        \n\n         </Container>\n         { fetching && <GreenButton onClick={() => setPage(p => ++p)}>Load more...</GreenButton>}\n      </div>\n   );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}